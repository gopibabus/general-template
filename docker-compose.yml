version: "3"
services:
    app:
        image: ci4-www
        container_name: ci4-www
        depends_on:
            - postgres
            - redis
        build:
            context: .
            dockerfile: docker/Dockerfile
        env_file:
            - .docker.env
        environment:
            CONTAINER_ROLE: app
        volumes:
            - .:/var/www/html
        ports:
            - "8090:80"
    mysql:
        image: mysql:5.7
        container_name: ci4-mysql
        volumes:
            - mysql_data:/var/lib/mysql
        environment:
            MYSQL_DATABASE: ${LEGACY_DATABASE_NAME}
            MYSQL_ROOT_PASSWORD: ${LEGACY_DATABASE_ROOT_PASSWORD}
            MYSQL_USER: ${LEGACY_DATABASE_USERNAME}
            MYSQL_PASSWORD: ${LEGACY_DATABASE_PASSWORD}
        ports:
            - "33060:3306"
    postgres:
        image: postgres:14
        container_name: ci4-postgres
        restart: always
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${DATABASE_NAME}
            POSTGRES_USER: ${DATABASE_USERNAME}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
        ports:
            - "5432:5432"
    testdb:
        image: postgres:14
        container_name: ci4-test-db
        volumes:
            - test_data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${TEST_DATABASE_NAME}
            POSTGRES_USER: ${TEST_DATABASE_USERNAME}
            POSTGRES_PASSWORD: ${TEST_DATABASE_PASSWORD}
        ports:
            - "5433:5432"
    redis:
        image: redis:6-alpine
        container_name: ci4-redis
        restart: always
        ports:
            - "63790:6379"
        volumes:
            - redis_data:/data
volumes:
    mysql_data:
        driver: "local"
    postgres_data:
        driver: "local"
    test_data:
        driver: "local"
    redis_data:
        driver: "local"